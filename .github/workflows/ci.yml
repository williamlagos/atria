name: CI

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [3.7, 3.8, 3.9]

        services:
            postgres:
                image: postgres:13
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: test_db
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: recursive

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}
                  cache: 'pip'

            - name: Install uv
              run: |
                  curl -LsSf https://github.com/astral-sh/uv/releases/download/0.1.13/uv-linux-amd64.tar.gz | tar zxf - -C /usr/local/bin

            - name: Install dependencies
              run: |
                  uv pip install -e ".[dev]"

            - name: Run pre-commit hooks
              run: |
                  pre-commit run --all-files

            - name: Check for security vulnerabilities
              run: |
                  safety check
                  bandit -r atria emporio plethora shipping socialize

            - name: Run tests
              env:
                  DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
              run: |
                  pytest --cov=. --cov-report=xml

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              with:
                  file: ./coverage.xml
                  fail_ci_if_error: true

    deploy:
        needs: test
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/master'

        steps:
            - uses: actions/checkout@v3

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.9'

            - name: Build package
              run: |
                  pip install build
                  python -m build

            - name: Deploy to PyPI
              if: startsWith(github.ref, 'refs/tags')
              uses: pypa/gh-action-pypi-publish@release/v1
              with:
                  password: ${{ secrets.PYPI_API_TOKEN }}
